<?php
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo(); //1 так как и a1 и а2 являются экземплярами одного класса, а функция foo() public и доступна отовсюду
$a2->foo(); //2 так как и a1 и а2 являются экземплярами одного класса, а функция foo() public и доступна отовсюду
$a1->foo(); //3 так как и a1 и а2 являются экземплярами одного класса, а функция foo() public и доступна отовсюду
$a2->foo(); //4 так как и a1 и а2 являются экземплярами одного класса, а функция foo() public и доступна отовсюду


class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A();
$b1 = new B();
$a1->foo(); // 1
$b1->foo(); // также 1, так как класс B наследует класс А и переопределяет его функцию и переменную
$a1->foo(); // 2 так как происходит вызов функции родительского класса с его переменными
$b1->foo(); // также 2, так как класс B наследует класс А и переопределяет его функцию и переменную